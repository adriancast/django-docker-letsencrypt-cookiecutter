version: '3.7'

services:
  web:
    build: ./app
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./app/:/usr/src/app/
    ports:
      - 8000:8000
    env_file:
      - ./.env.dev
    depends_on:
      - db
  db:
    image: postgres:12.0-alpine
    volumes:
      - {{cookiecutter.project_name}}_postgres_data_dev:/var/lib/postgresql/data/
    env_file:
      - ./.env.dev.db
{% if cookiecutter.add_prometheus_and_grafana == 'yes' %}
  prometheus:
    image: prometheus:latest
    restart: always
    ports:
      - 9090:9090
    build:
      context: prometheus
      dockerfile: Dockerfile

  grafana:
    image: grafana/grafana:8.0.4
    restart: always
    volumes:
      - {{cookiecutter.project_name}}_grafana:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    ports:
      - 3000:3000
    depends_on:
      - prometheus
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
{% endif %}
volumes:
  {{cookiecutter.project_name}}_postgres_data_dev:
    external: true
{% if cookiecutter.add_prometheus_and_grafana == 'yes' %}
  {{cookiecutter.project_name}}_grafana:
    external: true
{% endif %}